if ((typeof(dmfp$35$36$3counterTransitive$3js$0dmfp$35$36$3counterTransitive$3js$1)) == "undefined") {dmfp$35$36$3counterTransitive$3js$0dmfp$35$36$3counterTransitive$3js$1 = {};
};
(function(){basis$0General$1.print$163("<html><body><h2>counterTransitive returns the pairs missing that would make its relation argument transitive</h2><table border='1'><tr><th align='left'>Relation:(e.g. (5,2),(3,1)</th><td><input type='text' id='jL1'></td></tr><tr><th align='left'>Missing pairs needed:</th><td><div id='jR'>?</div></td></tr></table></body></html>");
dmfp$35$36$3counterTransitive$3js$0dmfp$35$36$3counterTransitive$3js$1.get$54 = function(id$57){var v$62 = (function(d,id){return SmlPrims.option(d.getElementById(id));})(js$0Js$1.document$88,id$57);
switch (v$62[0]) { case 0: {return v$62[1];
 break; }default: {throw [basis$0Initial$1.en$Fail$54,"Missing id in document: " + id$57];
} };
};
dmfp$35$36$3counterTransitive$3js$0dmfp$35$36$3counterTransitive$3js$1.input1$65;
var v$254 = (function(d,id){return SmlPrims.option(d.getElementById(id));})(js$0Js$1.document$88,"jL1");
switch (v$254[0]) { case 0: {dmfp$35$36$3counterTransitive$3js$0dmfp$35$36$3counterTransitive$3js$1.input1$65 = v$254[1];
 break; }default: {throw [basis$0Initial$1.en$Fail$54,"Missing id in document: jL1"];
} };
(function(fp,s,v){fp[s] = v;})((function(fp,s){return fp[s];})(dmfp$35$36$3counterTransitive$3js$0dmfp$35$36$3counterTransitive$3js$1.input1$65,"style"),"backgroundColor","yellow");
var fix$483 = {};
fix$483.$isRelatedTo = function(v$241,v$242,v$70){lab$isRelatedTo: while (true) {var v$82 = v$70[2];
if (v$82 == null) {return false;
} else {var v$93 = v$70[0];
var v$94 = v$70[1];
var v$95 = v$82;
var v$96 = v$95[0];
var v$97 = v$96[0];
var v$98 = v$96[1];
var v$99 = v$95[1];
if ((v$242([v$93,v$97]))?(v$241([v$94,v$98])):false) {return true;
} else {var t$484 = v$241;
var t$485 = v$242;
var t$486 = [v$93,v$94,v$99];
var v$241 = t$484;
var v$242 = t$485;
var v$70 = t$486;
continue lab$isRelatedTo;
};
};
};
};
dmfp$35$36$3counterTransitive$3js$0dmfp$35$36$3counterTransitive$3js$1.isRelatedTo$67 = fix$483.$isRelatedTo;
dmfp$35$36$3counterTransitive$3js$0dmfp$35$36$3counterTransitive$3js$1.counterTransitive$100 = function(v$243,relation$103){var fix$487 = {};
fix$487.$test = function(v$142){if (v$142 == null) {return null;
} else {var v$150 = v$142;
var v$151 = v$150[0];
var v$152 = v$151[0];
var v$153 = v$151[1];
var v$154 = v$150[1];
var t$497 = basis$0List$1.s$n$686;
var t$489;
var fix$488 = {};
fix$488.$testOnePair = function(v$477,v$313){if (v$313 == null) {return null;
} else {var v$320 = v$477[0];
var v$321 = v$477[1];
var v$322 = v$313;
var v$323 = v$322[0];
var v$324 = v$323[0];
var v$325 = v$323[1];
var v$326 = v$322[1];
var t$496 = basis$0List$1.s$n$686;
var t$495;
var t$494;
if ((v$243([v$321,v$324]))?false:true) {t$494 = true;
} else {var fix$490 = {};
fix$490.$isRelatedTo = function(v$478,v$479,v$453){lab$isRelatedTo: while (true) {if (v$453 == null) {return false;
} else {var v$456 = v$453;
var v$457 = v$456[0];
var v$458 = v$457[0];
var v$459 = v$457[1];
var v$460 = v$456[1];
if ((v$243([v$478,v$458]))?(v$243([v$479,v$459])):false) {return true;
} else {var t$491 = v$478;
var t$492 = v$479;
var t$493 = v$460;
var v$478 = t$491;
var v$479 = t$492;
var v$453 = t$493;
continue lab$isRelatedTo;
};
};
};
};
var isRelatedTo$451 = fix$490.$isRelatedTo;
t$494 = (isRelatedTo$451(v$320,v$325,relation$103));
};
t$495 = (t$494?null:[[v$320,v$325],null]);
return t$496(t$495,fix$488.$testOnePair([v$320,v$321],v$326));
};
};
var testOnePair$309 = fix$488.$testOnePair;
t$489 = (testOnePair$309([v$152,v$153],relation$103));
return t$497(t$489,fix$487.$test(v$154));
};
};
var test$139 = fix$487.$test;
return test$139(relation$103);
};
dmfp$35$36$3counterTransitive$3js$0dmfp$35$36$3counterTransitive$3js$1.makeRelation$155 = function(s$158){var fix$498 = {};
fix$498.$makePairs = function(v$166){if (v$166 == null) {return null;
} else {var v$175 = v$166;
var v$176 = v$175[1];
if (v$176 == null) {throw CompilerInitial.exn$Match$48;
} else {var v$178 = v$175[0];
var v$179 = v$176;
var v$180 = v$179[0];
var v$181 = v$179[1];
return [[v$178,v$180],fix$498.$makePairs(v$181)];
};
};
};
var makePairs$163 = fix$498.$makePairs;
return makePairs$163(basis$0List$1.map$697(function(x$375){return basis$0General$1.valOf$130(basis$0Int32$1.fromString$462(x$375));
},basis$0String$1.tokens$224(function(c$376){return basis$0Char$1.isPunct$233(c$376);
},s$158)));
};
var fix$499 = {};
fix$499.$makeStringFromRelation = function(v$185){if (v$185 == null) {return "";
} else {var v$193 = v$185;
var v$194 = v$193[0];
var v$195 = v$194[0];
var v$196 = v$194[1];
var v$197 = v$193[1];
return ((((("(" + (basis$0Int32$1.toString$458(v$195))) + ",") + (basis$0Int32$1.toString$458(v$196))) + ")") + ",") + (fix$499.$makeStringFromRelation(v$197));
};
};
dmfp$35$36$3counterTransitive$3js$0dmfp$35$36$3counterTransitive$3js$1.makeStringFromRelation$182 = fix$499.$makeStringFromRelation;
dmfp$35$36$3counterTransitive$3js$0dmfp$35$36$3counterTransitive$3js$1.removeComma$198 = function(s$201){var v$480;
var v$476 = s$201.length;
v$480 = ((1 > v$476)?[s$201,0,0]:[s$201,0,SmlPrims.chk_ovf_i32(v$476 - 1)]);
return basis$0Substring$1.string$117(v$480[0],v$480[1],v$480[2]);
};
dmfp$35$36$3counterTransitive$3js$0dmfp$35$36$3counterTransitive$3js$1.comp$202 = function(v$204){var v$205 = (function(e){return e.value;})(dmfp$35$36$3counterTransitive$3js$0dmfp$35$36$3counterTransitive$3js$1.input1$65);
var res$206;
var s$390 = dmfp$35$36$3counterTransitive$3js$0dmfp$35$36$3counterTransitive$3js$1.makeStringFromRelation$182(dmfp$35$36$3counterTransitive$3js$0dmfp$35$36$3counterTransitive$3js$1.counterTransitive$100(function(v$245){return v$245[0] == v$245[1];
},dmfp$35$36$3counterTransitive$3js$0dmfp$35$36$3counterTransitive$3js$1.makeRelation$155(v$205)));
var v$481;
var v$473 = s$390.length;
v$481 = ((1 > v$473)?[s$390,0,0]:[s$390,0,SmlPrims.chk_ovf_i32(v$473 - 1)]);
res$206 = (basis$0Substring$1.string$117(v$481[0],v$481[1],v$481[2]));
var r$207;
var v$398 = (function(d,id){return SmlPrims.option(d.getElementById(id));})(js$0Js$1.document$88,"jR");
switch (v$398[0]) { case 0: {r$207 = v$398[1];
 break; }default: {throw [basis$0Initial$1.en$Fail$54,"Missing id in document: jR"];
} };
(function(fp,s,v){fp[s] = v;})((function(fp,s){return fp[s];})(r$207,"style"),"backgroundColor","pink");
(function(e,s){e.innerHTML = s;})(r$207,res$206);
return false;
};
js$0Js$1.installEventHandler$197(dmfp$35$36$3counterTransitive$3js$0dmfp$35$36$3counterTransitive$3js$1.input1$65,5,function(v$482){return dmfp$35$36$3counterTransitive$3js$0dmfp$35$36$3counterTransitive$3js$1.comp$202(v$482);
});
return 0;
})();
